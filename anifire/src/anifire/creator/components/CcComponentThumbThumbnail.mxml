<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx">

	<fx:Script>
		<![CDATA[
			import anifire.constant.CcServerConstant;
			import anifire.creator.events.CcComponentLoadEvent;
			import anifire.creator.events.CcComponentThumbnailMouseEvent;
			import anifire.creator.models.CcComponent;
			import anifire.creator.models.CcComponentThumb;
			import anifire.util.UtilColor;
			import mx.controls.Label;
			import mx.core.UIComponent;

			private const THUMBNAIL_SIZE:Number = 60;
			public var componentThumb:CcComponentThumb = null;
			private var targetWidth:Number;
			private var targetHeight:Number;
			private var loader:Loader;
			private var bgStyleName:String;
			public var componentThumbDetailThumbnail:CcComponentThumbDetailThumbnail;
			public var componentType:String;

			public function get isNullComponent() : Boolean
			{
				return this.componentThumb == null ? true : false;
			}
			
			public function init(param1:CcComponentThumbDetailThumbnail, param2:Number, param3:Number, param4:CcComponentThumb) : void
			{
				if(this.thumbnailContainer != null)
				{
					this.thumbnailContainer.removeAllChildren();
				}
				this.componentThumb = param4;
				this.componentType = this.componentThumb.type;
				this.targetWidth = param2;
				this.targetHeight = param3;
				this.componentThumbDetailThumbnail = param1;
				this.width = this.targetWidth;
				this.height = this.targetHeight;
				this.componentThumb.addEventListener(CcComponentLoadEvent.LOAD_THUMBNAIL_IMAGE_DATA_COMPLETE,this.onThumbnailLoadFromNetwork);
				this.componentThumb.loadThumbnailImageData();
			}
			
			public function initNullThumbnail(param1:CcComponentThumbDetailThumbnail, param2:Number, param3:Number, param4:String) : void
			{
				if(this.thumbnailContainer != null)
				{
					this.thumbnailContainer.removeAllChildren();
				}
				this.componentThumb = null;
				this.componentType = param4;
				this.targetWidth = param2;
				this.targetHeight = param3;
				this.componentThumbDetailThumbnail = param1;
				this.width = this.targetWidth;
				this.height = this.targetHeight;
			}
			
			public function setBgStyleName(param1:String) : void
			{
				this.bgStyleName = param1;
				if(this.btnThumb != null)
				{
					this.btnThumb.styleName = param1;
				}
			}
			
			private function onNullThumbnailReady(param1:Event) : void
			{
				(param1.target as IEventDispatcher).removeEventListener(param1.type,this.onNullThumbnailReady);
				var _loc2_:DisplayObject = param1.target as DisplayObject;
				this.placeThumbnail(_loc2_);
			}
			
			private function onThumbnailLoadFromNetwork(param1:CcComponentLoadEvent) : void
			{
				(param1.target as IEventDispatcher).removeEventListener(param1.type,this.onThumbnailLoadFromNetwork);
				this.loader = new Loader();
				this.loader.mouseChildren = false;
				this.loader.mouseEnabled = false;
				this.loader.contentLoaderInfo.addEventListener(Event.COMPLETE,this.onThumbImageDataLoadByteComplete);
				this.loader.loadBytes(this.componentThumb.thumbnailImageData);
			}
			
			private function onThumbImageDataLoadByteComplete(param1:Event) : void
			{
				(param1.target as IEventDispatcher).removeEventListener(param1.type,this.onThumbImageDataLoadByteComplete);
				this.placeThumbnail(this.loader);
			}
			
			private function placeThumbnail(param1:DisplayObject) : void
			{
				var _loc3_:Canvas = null;
				var _loc4_:Label = null;
				param1.scaleX = -1;
				param1.x = 1 * this.THUMBNAIL_SIZE;
				var _loc2_:UIComponent = new UIComponent();
				if(CcServerConstant.displayThumbnailId())
				{
					_loc3_ = new Canvas();
					_loc3_.styleName = "thumbnailIdBackdrop";
					_loc3_.width = this.THUMBNAIL_SIZE - 2;
					_loc3_.x = _loc3_.y = 1;
					(_loc4_ = new Label()).text = this.componentThumb.componentId.replace(/^.*_/,"");
					_loc4_.percentHeight = _loc4_.percentWidth = 100;
					_loc4_.styleName = "thumbnailId";
					_loc3_.addChild(_loc4_);
				}
				_loc2_.addChild(param1);
				this.thumbnailContainer.addChild(_loc2_);
				if(CcServerConstant.displayThumbnailId())
				{
					this.thumbnailContainer.addChild(_loc3_);
				}
			}
			
			private function drawControlBg() : void
			{
				this.control.graphics.clear();
				this.control.graphics.lineStyle(2,16744749);
				this.control.graphics.beginFill(13421772,1);
				this.control.graphics.moveTo(0,0);
				this.control.graphics.lineTo(0,this.height);
				this.control.graphics.lineTo(this.width,this.height);
				this.control.graphics.lineTo(this.width,10);
				this.drawMyCircle(this.control,10,this.width,0);
				this.control.graphics.lineTo(0,0);
				this.control.graphics.endFill();
			}
			
			private function onReleaseDelete() : void
			{
				var _loc1_:CcComponentThumbnailMouseEvent = new CcComponentThumbnailMouseEvent(CcComponentThumbnailMouseEvent.DELETE_RELEASED,this);
				this.dispatchEvent(_loc1_);
			}
			
			private function drawMyCircle(param1:Sprite, param2:Number, param3:Number, param4:Number) : void
			{
				param1.graphics.curveTo(0.4142 * param2 + param3,param2 + param4,0.7071 * param2 + param3,0.7071 * param2 + param4);
				param1.graphics.curveTo(param2 + param3,0.4142 * param2 + param4,param2 + param3,param4);
				param1.graphics.curveTo(param2 + param3,-0.4142 * param2 + param4,0.7071 * param2 + param3,-0.7071 * param2 + param4);
				param1.graphics.curveTo(0.4142 * param2 + param3,-param2 + param4,param3,-param2 + param4);
				param1.graphics.curveTo(-0.4142 * param2 + param3,-param2 + param4,-0.7071 * param2 + param3,-0.7071 * param2 + param4);
				param1.graphics.curveTo(-param2 + param3,-0.4142 * param2 + param4,-param2 + param3,param4);
			}
			
			private function onOverDel() : void
			{
				UtilColor.setRGB(this.btnDel,16744749);
			}
			
			private function onOutDel() : void
			{
				UtilColor.setRGB(this.btnDel);
			}
		]]>
	</fx:Script>

	<s:Button id="btnThumb" x="0" y="0" initialize=""/>
	<mx:Canvas id="control" x="0" y="0" visible="false" clipContent="false" creationComplete="">
		<s:Button
			id="btnDel"
			styleName="btnDelDec"
			y="-5"
			width="10"
			height="10"
			click=""
			mouseOver=""
			mouseOut=""/>
	</mx:Canvas>
	<mx:Canvas id="thumbnailContainer" x="0" y="0" clipContent="false"/>

</mx:Canvas>
