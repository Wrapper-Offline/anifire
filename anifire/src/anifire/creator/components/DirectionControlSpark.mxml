<?xml version="1.0" encoding="utf-8"?>
<s:Group
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:components="anifire.creator.components.*"
	width="65"
	height="65">

	<fx:Script>
		<![CDATA[
			import anifire.creator.events.CcThumbPropertyEvent;
			import anifire.creator.models.CcComponent;

			private var _timer:Timer;
			private var _type:String;

			private function onMouseDown(param1:Event) : void
			{
				var _loc2_:CcThumbPropertyEvent = null;
				this._type = this.getTypeByEventTarget(param1.currentTarget);
				_loc2_ = new CcThumbPropertyEvent(this._type,this);
				this.dispatch(_loc2_);
				this._timer = new Timer(1000,1);
				this._timer.addEventListener(TimerEvent.TIMER,this.doFirstTimer);
				this._timer.start();
			}
			
			private function onMouseUp(param1:Event) : void
			{
				var _loc2_:CcThumbPropertyEvent = null;
				if(this._timer != null && this._timer.running)
				{
					this._timer.stop();
					this._timer.removeEventListener(TimerEvent.TIMER,this.doTimer);
					_loc2_ = new CcThumbPropertyEvent(CcThumbPropertyEvent.CCPROP_LOCATION_UPDATE,this);
					this.dispatch(_loc2_);
				}
			}
			
			private function doFirstTimer(param1:TimerEvent) : void
			{
				this._timer.stop();
				this._timer.removeEventListener(TimerEvent.TIMER,this.doFirstTimer);
				this._timer = new Timer(20);
				this._timer.addEventListener(TimerEvent.TIMER,this.doTimer);
				this._timer.start();
			}
			
			private function doTimer(param1:TimerEvent) : void
			{
				var _loc2_:String = null;
				var _loc3_:CcThumbPropertyEvent = null;
				_loc2_ = this._type;
				_loc3_ = new CcThumbPropertyEvent(_loc2_,this);
				this.dispatch(_loc3_);
			}
			
			private function onClick(param1:Event) : void
			{
				var _loc3_:CcThumbPropertyEvent = null;
				var _loc2_:String = this.getTypeByEventTarget(param1.currentTarget);
				_loc3_ = new CcThumbPropertyEvent(_loc2_,this);
				this.dispatch(_loc3_);
			}
			
			public function destroy() : void
			{
				this.visible = false;
			}
			
			private function dispatch(param1:Event) : void
			{
				this.dispatchEvent(param1);
			}
			
			private function getTypeByEventTarget(param1:Object) : String
			{
				var _loc2_:String = "";
				switch(param1)
				{
					case this.btnUp:
						_loc2_ = CcThumbPropertyEvent.CCPROP_UP_BUTTON_CLICK;
						break;
					case this.btnDown:
						_loc2_ = CcThumbPropertyEvent.CCPROP_DOWN_BUTTON_CLICK;
						break;
					case this.btnLeft:
						_loc2_ = CcThumbPropertyEvent.CCPROP_LEFT_BUTTON_CLICK;
						break;
					case this.btnRight:
						_loc2_ = CcThumbPropertyEvent.CCPROP_RIGHT_BUTTON_CLICK;
				}
				return _loc2_;
			}
		]]>
	</fx:Script>

	<s:Image source="@Embed('../images/propertyInspector/directionPad.png')"/>
	<components:IconButton
		id="btnUp"
		buttonMode="true"
		enabled="true"
		horizontalCenter="0"
		top="0"
		icon="@Embed('../images/propertyInspector/arrowUp.png')"
		iconOver="@Embed('../images/propertyInspector/arrowUp_hover.png')"
		iconDown="@Embed('../images/propertyInspector/arrowUp_down.png')"
		mouseDown="onMouseDown(event)"
		mouseOut="onMouseUp(event)"
		mouseUp="onMouseUp(event)"/>
	<components:IconButton
		id="btnDown"
		buttonMode="true"
		enabled="true"
		horizontalCenter="0"
		bottom="0"
		icon="@Embed('../images/propertyInspector/arrowDown.png')"
		iconOver="@Embed('../images/propertyInspector/arrowDown_hover.png')"
		iconDown="@Embed('../images/propertyInspector/arrowDown_down.png')"
		mouseDown="onMouseDown(event)"
		mouseOut="onMouseUp(event)"
		mouseUp="onMouseUp(event)"/>
	<components:IconButton
		id="btnLeft"
		buttonMode="true"
		enabled="true"
		verticalCenter="0"
		left="0"
		icon="@Embed('../images/propertyInspector/arrowLeft.png')"
		iconOver="@Embed('../images/propertyInspector/arrowLeft_hover.png')"
		iconDown="@Embed('../images/propertyInspector/arrowLeft_down.png')"
		mouseDown="onMouseDown(event)"
		mouseOut="onMouseUp(event)"
		mouseUp="onMouseUp(event)"/>
	<components:IconButton
		id="btnRight"
		buttonMode="true"
		enabled="true"
		verticalCenter="0"
		right="0"
		icon="@Embed('../images/propertyInspector/arrowRight.png')"
		iconOver="@Embed('../images/propertyInspector/arrowRight_hover.png')"
		iconDown="@Embed('../images/propertyInspector/arrowRight_down.png')"
		mouseDown="onMouseDown(event)"
		mouseOut="onMouseUp(event)"
		mouseUp="onMouseUp(event)"/>

</s:Group>
